name: "Frontend"
on:
  push:
    branches:
      - chuzui/fix-action
  deployment:
permissions:
  id-token: write
  contents: read
  deployments: write
  statuses: write
jobs:
  build:
    name: Run Tests and check code format
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    # - name: Get yarn cache
    #   id: yarn-cache
    #   run: echo "::set-output name=dir::$(yarn cache dir)"
    # - uses: actions/cache@v2
    #   with:
    #     path: ${{ steps.yarn-cache.outputs.dir }}
    #     key: ${{ runner.os }}-yarn-web-node14-${{ hashFiles('apps/web/pnpm-lock.yaml') }}
    #     restore-keys: |
    #       ${{ runner.os }}-yarn-web-node14-
    - name: Configure AWS Credentials (US)
      uses: aws-actions/configure-aws-credentials@master
      with:
        role-to-assume: arn:aws:iam::663354718506:role/GithubDeployLogisticsRole
        aws-region: us-west-2
    - name: Install dependencies and deploy staging
      #if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'deployment' && github.event.deployment.environment == 'staging')
      run: |
        npm i pnpm -g
        pnpm i
        pnpm build:beta
        aws s3 sync --delete dist/ s3://logistics.vibe.dev/
        aws cloudfront create-invalidation \
            --distribution-id E1QRAWF4RAJF91 \
            --paths "/*"
    - name: Install dependencies and deploy production
      if: github.event_name == 'deployment' && github.event.deployment.environment == 'production' && github.ref == 'refs/heads/master'
      run: |
        npm i pnpm -g
        pnpm i
        pnpm build:prod
        aws s3 sync --delete dist/ s3://prod-logistics.vibe.dev/
        aws cloudfront create-invalidation \
            --distribution-id E1661MYNNUWY7D \
            --paths "/*"
